apiVersion: apps/v1
kind: Deployment
metadata: { name: products-api }
spec:
  replicas: 1
  selector: { matchLabels: { app: products-api } }
  template:
    metadata: { labels: { app: products-api } }
    spec:
      containers:
        - name: api
          image: products-api:local
          imagePullPolicy: Never
          ports: [{ containerPort: 8080 }]
          resources:
            requests: { cpu: "100m", memory: "256Mi" }
            limits: { cpu: "500m", memory: "512Mi" }
          env:
            - name: SPRING_PROFILES_ACTIVE
              valueFrom: { configMapKeyRef: { name: app-config, key: SPRING_PROFILES_ACTIVE } }
            - name: DB_HOST
              valueFrom: { configMapKeyRef: { name: app-config, key: DB_HOST } }
            - name: DB_NAME
              valueFrom: { configMapKeyRef: { name: app-config, key: DB_NAME } }
            - name: DB_USER
              valueFrom: { secretKeyRef: { name: app-secret, key: db-user } }
            - name: DB_PASS
              valueFrom: { secretKeyRef: { name: app-secret, key: db-pass } }
          readinessProbe:
            httpGet: { path: /actuator/health/readiness, port: 8080 }
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            httpGet: { path: /actuator/health/liveness, port: 8080 }
            initialDelaySeconds: 30
            periodSeconds: 10
          startupProbe:
            httpGet: { path: /actuator/health, port: 8080 }
            failureThreshold: 30
            periodSeconds: 3